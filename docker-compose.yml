version: '3'

services:
#  zookeeper:
#    image: wurstmeister/zookeeper
#    ports:
#      - "2181:2181"
#  kafka:
#    image: wurstmeister/kafka
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_HOST_NAME: kafka
#      KAFKA_CREATE_TOPICS: "searchStatisticsTopic:1:1,pageableSearchStatisticsTopic:1:1,adDetailsDisplaysTopic:1:1"
#      KAFKA_DELETE_TOPIC_ENABLE: "true"
#      KAFKA_BROKER_ID: 100
#
#    depends_on:
#      - zookeeper

  mongo:
    image: mongo
    restart: always
    ports:
      - "27017:27017"

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"

#  ad-search-service:
#    restart: always
#    build:
#      context: ./ad-search-service
#      dockerfile: app.dockerfile
#    ports:
#      - "8083:8080"
#      - "4010:8000"
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "10m"
#        max-file: "3"
#    depends_on:
#      - kafka
#
#  ad-audit-service:
#    restart: always
#    build:
#      context: ./ad-audit-service
#      dockerfile: app.dockerfile
#    ports:
#      - "8082:8080"
#      - "4011:8000"
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "10m"
#        max-file: "3"
#    depends_on:
#      - mongo
#      - kafka

volumes:
  mongodb_data:
    driver: local
